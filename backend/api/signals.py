import logging
import os
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.utils.timezone import now

from .models import Invoice, InvoiceItem, TaskStatus
from .tasks import generate_pdf

logger = logging.getLogger(__name__)


@receiver(post_save, sender=InvoiceItem)
def generate_pdf_when_item_added(sender, instance, created, **kwargs):
    invoice = instance.invoice

    # –ü—Ä–æ–≤–µ—Ä–∏–º: –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω item –∏ PDF –µ—â—ë –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
    if invoice.items.exists():
        pdf_path = invoice.get_pdf_path()

        if not os.path.exists(pdf_path):
            try:
                logger.info(f"[signals] üßæ Invoice #{invoice.id}: –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF...")
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
                result = generate_pdf.delay(invoice.id)

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é
                TaskStatus.objects.update_or_create(
                    invoice=invoice,
                    defaults={
                        "task_id": result.id,
                        "status": TaskStatus.Status.QUEUED,
                        "started_at": now(),
                        "heartbeat_at": now()
                    }
                )
            except Exception as e:
                logger.exception(f"[signals] ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF")
